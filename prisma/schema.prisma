generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model Account {
  id                String  @id @default(auto()) @map("_id") @db.ObjectId
  type              String
  provider          String
  providerAccountId String
  refresh_token     String? @db.String
  access_token      String? @db.String
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? @db.String
  session_state     String?

  userId String @db.ObjectId
  user   User   @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(auto()) @map("_id") @db.ObjectId
  sessionToken String   @unique
  userId       String   @db.ObjectId
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
  id                 String              @id @default(auto()) @map("_id") @db.ObjectId
  username           String              @unique @default(cuid())
  email              String?             @unique
  name               String?
  hashedPassword     String?
  emailVerified      DateTime?
  image              String?
  accounts           Account[]
  sessions           Session[]
  verificationTokens VerificationToken[]

  @@unique([username, email])
}

model VerificationToken {
  id          String    @id @default(auto()) @map("_id") @db.ObjectId
  token       String    @unique
  expires     DateTime
  type        String
  isValid     Boolean   @default(true)
  activatedAt DateTime?
  userId      String    @db.ObjectId
  User        User      @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([id, token])
}
